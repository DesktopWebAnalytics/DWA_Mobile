<?xml version="1.0" encoding="utf-8"?>
<!--
	DWA_Mobile

	Link http://www.desktop-web-analytics.com
	Link https://github.com/DesktopWebAnalytics
	Licence http://www.gnu.org/licenses/gpl-3.0-standalone.html GPL v3 or later
-->
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
				 xmlns:s="library://ns.adobe.com/flex/spark"
				 title="{resourceManager.getString('piwik', 'SitesManager_AddSite')}"
				 viewActivate="initView()" initialize="initializeV()" keyDown="view1_keyDownHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import com.dwa.common.database.DataBase;
			import com.dwa.common.profile.Profile;
			
			import mx.collections.ArrayList;
			import mx.core.FlexGlobals;
			
			import spark.skins.mobile.TextInputSkin;
			
			private const MINPERIOD:int = 2;
			private const MAXPERIOD:int = 30;
			
			private const PERIOD:Array = [2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30];
			
			protected function initializeV():void{
				// hide back button
				if(!FlexGlobals.topLevelApplication.showBackButton) backButton.includeInLayout = backButton.visible = false;
			}
			private function initView():void{
				selectWebsite.dataProvider = new ArrayList(data as Array);
				limitPeriod.text = '(' + MINPERIOD + '-' + MAXPERIOD + ')';
			}
			
			private function goToSaveProfile():void {
				currentState = "loading";
				checkLoad.visible=true;
				errorMessage.text = "";
				
				// check websites selected
				var ob:Profile;
				var selectedProfiles:Array = new Array();
				var day:Boolean = true;
				if(reportYesterday.selected){
					day = false;
				}
				
				var per:int = spinnerList.selectedItem;
				if(per < MINPERIOD) per = MINPERIOD;
				else if(per > MAXPERIOD) per = MAXPERIOD;
				
				for each(ob in selectWebsite.dataProvider.toArray()){
					if(ob.selected == true){
						trace("selected");
						ob.websiteDay = day;
						ob.websitePeriod = per;
						selectedProfiles.push(ob);
					}
				}
				
				if(selectedProfiles.length>0){
					saveProfiles(selectedProfiles);
				}else{
					errorMessage.text = "No profiles to add to database";
					currentState = "normal";
					checkLoad.visible=false;
				}
			}
			private function saveProfiles(list:Array):void{
				var addDB:DataBase = new DataBase();
				
				addDB.addEventListener(Event.COMPLETE, resultSaved);
				addDB.addEventListener(ErrorEvent.ERROR, errorSaved);
				addDB.insertProfiles(list);
			}
			private function resultSaved(event:Event):void{
				trace("saved");
				//parentApplication.account.selectProfile();
				FlexGlobals.topLevelApplication.getWebsites();
			}
			private function errorSaved(event:ErrorEvent):void{
				trace("error saved");
				errorMessage.text = "";
				currentState = "normal";
				checkLoad.visible=false;
			}
			
			protected function view1_keyDownHandler(event:KeyboardEvent):void
			{
				// TODO Auto-generated method stub
				if(event.keyCode == Keyboard.BACK){
					navigator.popView();
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Placer ici les éléments non visuels (services et objets de valeur, par exemple). -->
	</fx:Declarations>
	<s:navigationContent>
		<s:Button id="backButton" styleName="actionButton" label="{resourceManager.getString('piwik', 'Mobile_NavigationBack')}" click="navigator.popView()" />
	</s:navigationContent>
	
	<s:states>
		<s:State name="normal" />
		<s:State name="loading" />
	</s:states>
	
	<s:Scroller width="100%" height="100%" top="10">
		<s:VGroup id="check" width="100%" paddingLeft="10" paddingRight="10" paddingBottom="10">
			<s:List id="selectWebsite" width="100%" height="180" borderVisible="true" borderColor="#333333">
				<s:itemRenderer>
					<fx:Component>
						<s:IconItemRenderer label="" labelField="" width="100%" height="60" initialize="itemrenderer1_initializeHandler(event)">
							<fx:Script>
								<![CDATA[
									import mx.events.FlexEvent;
									
									import spark.components.CheckBox;
									
									private var cb:CheckBox;
									
									protected function itemrenderer1_initializeHandler(event:FlexEvent):void
									{
										// TODO Auto-generated method stub
										if(!cb){
											cb = new CheckBox();
											cb.addEventListener(MouseEvent.CLICK, handleClick);
											cb.width = parentDocument.width;
											cb.height = 56;
											cb.x = 20;
											cb.verticalCenter = 0;
											addChild(cb);
										}
									}
									
									private function handleClick(event:MouseEvent):void{
										data.selected = cb.selected;
									}
									
									override public function set data(value:Object):void{
										if(value != null){
											super.data = value;
											cb.label = value.websiteName;
											cb.selected = value.selected;
										}
									}
									
								]]>
							</fx:Script>
						</s:IconItemRenderer>
					</fx:Component>
				</s:itemRenderer>
			</s:List>
			
			<s:VGroup width="100%" paddingTop="20">
				<s:VGroup width="100%">
					<s:Label width="100%" text="{resourceManager.getString('piwik', 'UsersManager_ReportToLoadByDefault')}" />
					<s:VGroup gap="0">
						<s:RadioButton id="reportToday" label="{resourceManager.getString('piwik', 'General_Today')}" groupName="reportDate" selected="true" />
						<s:RadioButton id="reportYesterday" label="{resourceManager.getString('piwik', 'General_Yesterday')}" groupName="reportDate" />
					</s:VGroup>
				</s:VGroup>
				<s:VGroup width="100%" verticalAlign="middle">
					<s:Label width="100%" text="{resourceManager.getString('piwik', 'VisitorGenerator_DaysToCompute')}" />
					<s:HGroup verticalAlign="middle">
						<s:SpinnerListContainer>
							<s:SpinnerList id="spinnerList" width="60" height="100" textAlign="right" selectedItem="10" dataProvider="{new ArrayList(PERIOD)}" />
						</s:SpinnerListContainer>
						
						<s:Label id="limitPeriod" paddingLeft="5" />
					</s:HGroup>
				</s:VGroup>
			</s:VGroup>
			<s:Label id="errorMessage" width="100%" textAlign="center" color="red" />
			<s:HGroup width="100%" horizontalAlign="center">
				<s:Button id="saveButton" excludeFrom="loading" width="300" maxWidth="440" height="60" label="{resourceManager.getString('piwik', 'General_Save')}" click="goToSaveProfile()" />
				<s:BusyIndicator id="checkLoad" width="60" height="60" includeIn="loading" />
			</s:HGroup>
			
		</s:VGroup>
	</s:Scroller>
</s:View>
