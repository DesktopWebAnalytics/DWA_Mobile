<?xml version="1.0" encoding="utf-8"?>
<!--
	DWA_Mobile

	Link http://www.desktop-web-analytics.com
	Link https://github.com/DesktopWebAnalytics
	Licence http://www.gnu.org/licenses/gpl-3.0-standalone.html GPL v3 or later

	$Id: OperatingSystems.mxml 263 2012-02-04 22:03:36Z benoit $
-->
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
				 xmlns:s="library://ns.adobe.com/flex/spark"
				 viewActivate="initView()" currentState="loading" actionBarVisible="false" xmlns:views="views.*" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:states="views.states.*">
	
	<fx:Script>
		<![CDATA[
			import com.dwa.common.profile.Profile;
			import com.dwa.common.reports.Reports;
			
			import mx.charts.events.ChartItemEvent;
			import mx.charts.series.items.PieSeriesItem;
			import mx.collections.XMLListCollection;
			import mx.core.FlexGlobals;
			import mx.effects.easing.Elastic;
			
			private var report:Reports;
			
			private var result:XMLListCollection;
			
			private function initView():void{
				titleView.text = resourceManager.getString('piwik', 'UserSettings_OperatingSystems') + ' - ' + resourceManager.getString('piwik', 'General_DateRange') + ' ' + dateTimeFormatter.format(FlexGlobals.topLevelApplication.selectedStartDate) + " - " + dateTimeFormatter.format(FlexGlobals.topLevelApplication.selectedEndDate);
				
				report = new Reports();
				report.addEventListener(Event.COMPLETE, resultApi);
				report.addEventListener(ErrorEvent.ERROR, error);
				report.getOs(data as Profile, FlexGlobals.topLevelApplication.selectedPeriodDate);
			}
			private function resultApi(event:Event):void{
				result = report.resultCollectionBasic;
				clear();
				compute();
			}
			private function error(event:ErrorEvent):void{
				trace("error: " + event.text);
				clear();
				currentState = "error";
				errorState.message(event.text);
			}
			private function clear():void{
				report.removeEventListener(Event.COMPLETE, resultApi);
				report.removeEventListener(ErrorEvent.ERROR, error);
				report = null;
			}
			private function compute():void{
				
				/* result.sort = new Sort();
				result.sort.fields = [new SortField("nb_visits", true, true, true)];
				result.refresh(); */
				
				//list.dataProvider = result;
				
				currentState = "chart";
				
				pieSeries.nameField = "label";
				pieSeries.field = "nb_visits";
				
				var maxPie:int = 6;
				
				if(result.length > maxPie){
					var sumOs:XMLListCollection = new XMLListCollection();
					var sum:int = 0;
					var k:int = 0;
					var os:int;
					var sumOSValue:int=0;
					var xml:XML;
					
					for each(xml in result){
						os = xml.nb_visits;
						if(k < maxPie){
							sumOs.addItem(xml);
							sum += os;
						}
						sumOSValue += os;
						k++;
					}
					
					var rowOther:XML = new XML("<row><label>" + resourceManager.getString('piwik', 'General_Others') +"</label><nb_visits>" + Number(sumOSValue-sum) + "</nb_visits></row>");
					sumOs.addItem(rowOther);
					
					pieChart.dataProvider = sumOs;
					
				}else{
					pieChart.dataProvider = result;
				}
				
				//view.removeElement(loading);
			}
			private function pieChart_itemClick(evt:ChartItemEvent):void {
				var item:PieSeriesItem = evt.hitData.chartItem as PieSeriesItem;
				var degrees:Number = radiansToDegrees(item.startAngle);
				var arr:Array = [];
				/* if (checkBox.selected) {
				arr[item.index] = 0.2;
				} */
				arr[item.index] = 0.2;
				
				pieSeries.perWedgeExplodeRadius = arr;
				pieSeries.startAngle -= degrees;
				
				result.refresh();
				
			}
			
			private function radiansToDegrees(radians:Number):Number {
				return radians * (180 / Math.PI);
			}
			
			private function displayBrowsers(data:Object, field:String, index:Number, percentValue:Number):String {
				var temp:String = rounding.format(percentValue);
				return data.label +": " + temp + "%" + "\n" + resourceManager.getString('piwik', 'General_ColumnNbVisits') + ": " + data.nb_visits;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Placer ici les éléments non visuels (services et objets de valeur, par exemple). -->
		
		<s:DateTimeFormatter id="dateTimeFormatter" locale="{resourceManager.getString('piwik', 'General_Locale')}" timeStyle="none" />
		
		<mx:NumberFormatter id="rounding" precision="1" />
	</fx:Declarations>
	
	<s:states>
		<s:State name="loading" />
		<s:State name="chart" />
		<s:State name="tab" />
		<s:State name="error" />
	</s:states>
	
	<s:layout>
		<s:VerticalLayout paddingTop="10" paddingLeft="5" paddingRight="5" paddingBottom="5" />
	</s:layout>
	
	<s:Label id="titleView" width="100%" fontSize="20" textAlign="center" />
	
	<states:Loader width="100%" height="100%" includeIn="loading" />
	
	<states:Error id="errorState" width="100%" height="100%" includeIn="error" />
	
	<s:Group width="100%" height="100%" includeIn="chart">
		<mx:PieChart id="pieChart" showDataTips="true" width="100%" height="100%" itemClick="pieChart_itemClick(event)">
			<mx:series>
				<mx:PieSeries id="pieSeries" labelPosition="callout" labelFunction="{displayBrowsers}">
					<mx:showDataEffect>
						<mx:SeriesInterpolate duration="1200" easingFunction="{Elastic.easeOut}" />
					</mx:showDataEffect>
					<mx:filters>
						<s:DropShadowFilter />
					</mx:filters>
				</mx:PieSeries>
			</mx:series>
		</mx:PieChart>
	</s:Group>
	<s:Group width="100%" height="100%" includeIn="tab">
		<s:VGroup width="100%" height="100%">
			<s:SkinnableContainer id="legend" width="100%" height="40" fontSize="20">
				<s:Label text="{resourceManager.getString('piwik', 'UserSettings_ColumnOperatingSystem')}" top="10" left="2" />
				<s:Label text="{resourceManager.getString('piwik', 'General_ColumnNbVisits')}" top="10" right="{legend.width/4+2}" />
				<s:Label text="{resourceManager.getString('piwik', 'General_ColumnNbUniqVisitors')}" top="10" right="2" />
			</s:SkinnableContainer>
			
			<s:List id="list" width="100%" height="100%" left="2" right="2">
				<s:itemRenderer>
					<fx:Component>
						<s:ItemRenderer width="100%" height="40" dataChange="dataChange()">
							<fx:Script>
								<![CDATA[
									import com.dwa.common.icons.LoadIcons;
									
									private var cache:LoadIcons;
									
									private var path:String = parentApplication.selectedProfile.websitePiwikAccess;
									
									private function dataChange():void{
										if(data==null) return;
										
										cache = new LoadIcons();
										cache.addEventListener(Event.COMPLETE, onCache);
										cache.addEventListener(ErrorEvent.ERROR, errorCache);
										cache.cache(path + data.logo);
										
										lab.text = data.label;
										visits.text = data.nb_visits;
										uniq_visits.text = data.nb_uniq_visitors;
									}
									private function onCache(event:Event):void{
										logo.source = cache.path;
									}
									private function errorCache(event:ErrorEvent):void{
										
									}
									private function clear():void{
										cache.removeEventListener(Event.COMPLETE, onCache);
										cache.removeEventListener(ErrorEvent.ERROR, errorCache);
									}
								]]>
							</fx:Script>
							
							<s:BitmapImage id="logo" width="14" height="14" top="10" left="2" />
							<s:Label id="lab" top="10" left="22" />
							<s:Label id="visits" top="10" right="{this.width/4+2}" />
							<s:Label id="uniq_visits" top="10" right="2" />
							
						</s:ItemRenderer>
					</fx:Component>
				</s:itemRenderer>
			</s:List>
		</s:VGroup>
	</s:Group>
</s:View>
